<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VRM – About VRM</title>
    <link>https://vrm.dev/en/vrm/</link>
    <description>Recent content in About VRM on VRM</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Apr 2018 16:30:00 +0900</lastBuildDate>
    
	  <atom:link href="https://vrm.dev/en/vrm/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: What is &#34;VRM&#34;? What can VRM do?</title>
      <link>https://vrm.dev/en/vrm_about/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/vrm_about/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;what-is-vrm&#34;&gt;What is VRM?&lt;/h2&gt;

&lt;p&gt;In the past, when trying to handle the &lt;strong&gt;3D humanoid avatar (3D model)&lt;/strong&gt; in Virtual Reality, Virtual YouTuber, etc., it was necessary to develop an unique system for applications and fine-tune the 3D model data due to&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The output data is depend on how creators make the 3D model and what modeling tools are used&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The coordinate system is different. The scale is different. The initial pose is different. The expression is different&amp;hellip;&lt;/li&gt;
&lt;li&gt;Needless to say, the way bones put into the 3D model is also different&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The format of handling the 3D model data is different. Each company has its own specifications, which are way more complex than necessary. Also, the necessary information about their file formats is not fully provided&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Whether the FBX file, which is compatible with various software, is viable for an application and which version of the application can process the FBX file are main issues concerned by most of the users.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;There is not enough necessary information available from the viewpoint of using the 3D model data as the Avatar&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For example, in the first-person view, how to obtain the right position, how to get rid of the head display, which part of the body should be excluded and so on&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the use of avatar in VR applications grows up very fast, if the situations mentioned above remain unchanged, application developers and 3D model creators will have to spend double or triple effort. To improve the current situation, based on the humanoid character and avatar, the first step is to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Effectively absorb and unify the differences from the model data&lt;/li&gt;
&lt;li&gt;Make handling the 3D model easy on the application side&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we propose a &lt;strong&gt;platform-independent 3D avatar file format&lt;/strong&gt; that possesses the above characteristics called &lt;strong&gt;VRM&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;what-can-you-do-with-vrm&#34;&gt;What can you do with VRM?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_app_en.png&#34; alt=&#34;VRM applications&#34;  /&gt;

&lt;strong&gt;The same avatar (VRM model) data can be used in any application that supports VRM&lt;/strong&gt;. As long as various VR applications are ready, the future will look like the one described below for sure&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create your own avatar with character maker tools that support VRM&lt;/li&gt;
&lt;li&gt;Use your own avatar to host a live streaming event and show up on your friends&amp;rsquo; live channels&lt;/li&gt;
&lt;li&gt;After the live streaming, start a VR game to explore the VR world with your own avatar&lt;/li&gt;
&lt;li&gt;Move to the chat room in the VR world after getting tired of the game. Use the same avatar character to hang out with friends&lt;/li&gt;
&lt;li&gt;Tomorrow join the VR study group in VR. Of course, the same avatar appearance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;By using your own avatar (VRM 3D model), you can easily access to various VRM-compatible applications and games&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Live streaming, video creation, games, chat&amp;hellip;. Now the virtual worlds are separated. The first step to connect the separated virtual worlds is VRM.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;vrm-features&#34;&gt;VRM features&lt;/h2&gt;

&lt;p&gt;VRM can handle the humanoid character and avatar. &lt;strong&gt;Although the current provided software to import and export VRM is for Unity, VRM itself is platform-independent&lt;/strong&gt;, which means VRM is also applicable to other engines and environments.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Available to handle the humanoid character (3D model data) without limiting to a specific platform.&lt;/li&gt;
&lt;li&gt;VRM is based on the 3D standard format &lt;strong&gt;glTF2.0&lt;/strong&gt;, which is the format added with constraints and extensions for handling the humanoid model. Ease of implementation as it is based on this standard format.&lt;/li&gt;
&lt;li&gt;All data including textures and materials is compacted as one file. To import a VRM model, only one single file needs to be handled.&lt;/li&gt;
&lt;li&gt;Based on the standard of the scale (1.00 = 1 m), the coordinate system (Y-up, -Z) and the bone structure (conforming to Unity Humanoid, T-Stance, no local rotation for each bone), a 3D model made by different modeling tools will not cause differences on the exported VRM model.&lt;/li&gt;
&lt;li&gt;Various techniques such as the BlendShape and the material transparency can be used to handle Avatar expressions. The difference in a technique can be absorbed and unified through API operation on the VRM side.&lt;/li&gt;
&lt;li&gt;For the use of avatar in VR, VRM supports &lt;strong&gt;first-person view&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A standard implementation of the object swaying that does not rely on the physical engine is available for users to set up the character&amp;rsquo;s hair, clothes and so on.&lt;/li&gt;
&lt;li&gt;A standard implementation of the PBR shader is provided. Beside the standard PBR, users can also choose the Toon shader or the Unlit shader.&lt;/li&gt;
&lt;li&gt;Not only the meta information such as the title and the author name, but also the thumbnail and the &lt;strong&gt;license information specialized for avatars in the VR era&lt;/strong&gt; can be included in the VRM file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VRM is assumed to be a 3D avatar format in the VR era and to be used in multiple applications. For example, when it comes to &amp;ldquo;VR communications with avatars online&amp;rdquo;, it is possible to &lt;strong&gt;send your own avatar data to your partners as they can see your avatar appearance in a shared virtual space&lt;/strong&gt;. However, there may be situations that cannot be handled by just redistribution rules based on conventional thinkings. Therefore, VRM has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modification / Redistribution rules for the avatar（configurable from Creative Commons, etc.）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;in addition to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Permission to use the avatar and perform various acts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The new adding above is assumed to be the format in VR era.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;license-data-settings-in-vrm-file&#34;&gt;License data settings in VRM file&lt;/h2&gt;

&lt;h3 id=&#34;personation-characterization-permission&#34;&gt;Personation / Characterization Permission&lt;/h3&gt;

&lt;h4 id=&#34;a-person-who-can-perform-with-this-avatar&#34;&gt;A person who can perform with this avatar&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Only Author&lt;/li&gt;
&lt;li&gt;Explicitly Licensed Person&lt;/li&gt;
&lt;li&gt;Everyone&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;permission-to-perform-violent-acts-with-this-avatar&#34;&gt;Permission to perform violent acts with this avatar&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;permission-to-perform-sexual-acts-with-this-avatar&#34;&gt;Permission to perform sexual acts with this avatar&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;for-commercial-use&#34;&gt;For commercial use&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;other-license-url&#34;&gt;Other License Url&lt;/h4&gt;

&lt;p&gt;If there are any conditions not mentioned above, put the URL link of the license document here.&lt;/p&gt;

&lt;h3 id=&#34;license-redistribution-modification&#34;&gt;License redistribution / modification&lt;/h3&gt;

&lt;h4 id=&#34;license-type&#34;&gt;License Type&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Redistribution Prohibited&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.en&#34; target=&#34;_blank&#34;&gt;Copyright wavier (CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY License(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC License(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SA License(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SA License(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY ND License(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC ND License(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;other-license-url-1&#34;&gt;Other License Url&lt;/h4&gt;

&lt;p&gt;If “Other” is selected, put the URL link of the license document here.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to make VRM file</title>
      <link>https://vrm.dev/en/how_to_make_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/how_to_make_vrm/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;conversion-from-existing-3d-model&#34;&gt;Conversion from existing 3D model&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_workflow_en.png&#34; alt=&#34;vrm workflow&#34;  /&gt;

To make VRM file, we use &lt;a href=&#34;https://unity3d.com/&#34; target=&#34;_blank&#34;&gt;Unity&lt;/a&gt; and &lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34; target=&#34;_blank&#34;&gt;UniVRM&lt;/a&gt;. The workflow is as follow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import the 3D model data and &lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34; target=&#34;_blank&#34;&gt;UniVRM&lt;/a&gt; into the current unity project. Adjust and set the size, material, etc.&lt;/li&gt;
&lt;li&gt;Export the 3D model data as VRM in Unity (normalization processing)&lt;/li&gt;
&lt;li&gt;Import the VRM file into the current unity project and customize the settings (license, spring bone, expression, eyelook, etc.)

&lt;ul&gt;
&lt;li&gt;In some cases, make sure the model is working (e.g. facial expression change) in play mode first&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Export the 3D model data after the adjustment is finished. The new settings now are saved in the updated VRM file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Briefly speaking, &lt;strong&gt;A 3D model can be adjusted and exported as VRM file in Unity. Once a VRM file is made, it can be imported again for model fine tuning&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;1-create-an-empty-project-in-unity&#34;&gt;1. Create an empty project in Unity&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34;   /&gt;


&lt;p&gt;Create a new project at the start page (&lt;code&gt;New -&amp;gt; Create project&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;2-import-univrm-package-into-the-created-project&#34;&gt;2. Import UniVRM package into the created project&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34;  /&gt;


&lt;p&gt;Download the latest unitypackage (UniVRM-0.XX) from &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;UniVRM/releases&lt;/a&gt; and import it into the current project (&lt;code&gt;Assets -&amp;gt; Import Package -&amp;gt; Custom Package&lt;/code&gt;). The path of imported files is&lt;code&gt;../Assets/VRM&lt;/code&gt;. &lt;strong&gt;It is recommended to delete existing VRM folder included VRM in advance before package import&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;3-prepare-a-3d-model-that-can-be-handled-as-humanoid-in-unity&#34;&gt;3. Prepare a 3D model that can be handled as &amp;ldquo;Humanoid&amp;rdquo; in Unity&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_generic.png&#34;   /&gt;


&lt;p&gt;Prepare a humanoid model that can be &lt;a href=&#34;https://docs.unity3d.com/2018.3/Documentation/Manual/HOWTO-importObject.html&#34; target=&#34;_blank&#34;&gt;imported&lt;/a&gt; into Unity such as FBX format. The bone setting is also required. Also, &lt;strong&gt;be sure to use your own model or the licensed model data that is processed and used as VR avatar&lt;/strong&gt;. As we will describe later, &lt;strong&gt;there are items that describe license information in VRM file itself, authors need to set those items for their own VRM models&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Go to the model&amp;rsquo;s&lt;code&gt;Import Settings -&amp;gt; Rig -&amp;gt; Animation Type&lt;/code&gt;and select&lt;code&gt;Humanoid&lt;/code&gt;after the model is imported.&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/fix_eye.png&#34;   /&gt;


&lt;p&gt;When the model file is imported, bone assignments done by auto-recognition may be different from expectations (see image above):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jaw is assigned to mouth&lt;/li&gt;
&lt;li&gt;Eye is assigned to eye highlight&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can fix them by assigning the right corresponding parts manually.&lt;/p&gt;

&lt;h3 id=&#34;4-adjust-the-model-data-and-export-it-as-vrm-from-menu-normalization-processing&#34;&gt;4. Adjust the model data and export it as VRM from menu（normalization processing）&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;Drag and drop the model data (made in step 3) under the scene in the Hierarchy window&lt;/strong&gt; and adjust the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Model Position

&lt;ul&gt;
&lt;li&gt;The model should be placed at the origin&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Model Scale

&lt;ul&gt;
&lt;li&gt;1.0 = 1m&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Model Pose

&lt;ul&gt;
&lt;li&gt;The model should face towards +Z(axis) direction&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Texture（material / shader）

&lt;ul&gt;
&lt;li&gt;Go to&lt;code&gt;Import Settings -&amp;gt; Materials -&amp;gt; Location&lt;/code&gt;and select&lt;code&gt;Use External Materials (Legacy)&lt;/code&gt;to enable shader option. It is &lt;strong&gt;highly recommended&lt;/strong&gt; to use the shaders listed below:

&lt;ul&gt;
&lt;li&gt;PBR

&lt;ul&gt;
&lt;li&gt;Standard shader (Unity standard)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Unlit type shader

&lt;ul&gt;
&lt;li&gt;VRM/UnlitTexture (same as Unit/Texture)&lt;/li&gt;
&lt;li&gt;VRM/UnlitCutout (same as Unit/Coutout)&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparent (same as Unit/Transparent)&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparentZWrite (Alpha blending and ZWrite are available. It is assumed to be applied to semi-transparent objects)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Toon shader

&lt;ul&gt;
&lt;li&gt;VRM/MToon (lighting supported toon shader）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu_enable.png&#34;   /&gt;


&lt;p&gt;After the adjustment is finished, select the model data in&lt;code&gt;Hierarchy&lt;/code&gt;and export the model from&lt;code&gt;menu -&amp;gt; VRM -&amp;gt; export humanoid&lt;/code&gt;.&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog.png&#34;   /&gt;


&lt;p&gt;Check the boxes and click the&lt;code&gt;Export&lt;/code&gt;button&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Force T Pose

&lt;ul&gt;
&lt;li&gt;Force the model pose to become &lt;a href=&#34;../vrm_tpose/&#34;&gt;T-Pose&lt;/a&gt; before removing rotation / scale.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pose Freeze

&lt;ul&gt;
&lt;li&gt;Whether the rotation / scale removal processing should be performed. It is &lt;strong&gt;the process of normalizing model&lt;/strong&gt; for conforming to the VRM rules. Please make sure to check the boxes at the &lt;strong&gt;first time of use&lt;/strong&gt;. After this process is done, all the components can work correctly.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By clicking the&lt;code&gt;Export&lt;/code&gt;button, the VRM file can be created. To easily track this file, it is recommended to name the file like this: &amp;ldquo;Model_Name_Normalized.vrm&amp;rdquo;. Details about model&amp;rsquo;s T-Pose normalization &lt;a href=&#34;https://github.com/vrm-c/UniVRM/wiki/T-Pose-Normalization-for-Model&#34; target=&#34;_blank&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;5-import-the-vrm-file&#34;&gt;5. Import the VRM file&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab_en.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;Drag and drop the VRM file (~.vrm) from step 4 into Assets folder&lt;/strong&gt;. The &lt;strong&gt;prefab&lt;/strong&gt; file of the imported VRM model data can be automatically generated.&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34;   /&gt;


&lt;p&gt;Now remove the model data (step 4), and &lt;strong&gt;drag and drop the prefab file under the scene in the Hierarchy window&lt;/strong&gt;. Normalized model data such as mesh, etc. can then be shown.&lt;/p&gt;

&lt;h3 id=&#34;6-custom-setting-in-vrm&#34;&gt;6. Custom setting in VRM&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;


&lt;p&gt;The VRM model&amp;rsquo;s information will be shown in the Inspector window once the GameObject of the model data (step 5) in&lt;code&gt;Hierarchy&lt;/code&gt;is selected. In addition, the setting about &lt;strong&gt;spring bone (object swaying) is available in &amp;ldquo;secondary&amp;rdquo;&lt;/strong&gt;. Please at least fill in title, author, license information. &lt;strong&gt;Specially, license information is crucial!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Information&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title

&lt;ul&gt;
&lt;li&gt;Avatar model name (any input)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Version

&lt;ul&gt;
&lt;li&gt;Avatar model version (any input)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Author

&lt;ul&gt;
&lt;li&gt;Author name&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Contact Information

&lt;ul&gt;
&lt;li&gt;Author contact information&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Reference

&lt;ul&gt;
&lt;li&gt;Original / Related works of this avatar, if any&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;License&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Personation / Characterization Permission&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A person who can perform with this avatar

&lt;ul&gt;
&lt;li&gt;Only Author&lt;/li&gt;
&lt;li&gt;Explicitly Licensed Person&lt;/li&gt;
&lt;li&gt;Everyone&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Permission to perform violent acts with this avatar

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Permission to perform sexual acts with this avatar

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For commercial use

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other License Url

&lt;ul&gt;
&lt;li&gt;If there are any conditions not mentioned above, put the URL link of the license document here&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;License redistribution / modification&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;License Type&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistribution Prohibited&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.en&#34; target=&#34;_blank&#34;&gt;Copyright wavier (CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY License(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC License(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SA License(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SA License(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY ND License(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC ND License(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Other License Url&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If “Other” is selected, put the URL link of the license document here&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides, please set up necessary items listed below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_blendshape/&#34;&gt;Expression and lip-sync (BlendShape)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_firstperson/&#34;&gt;First-person point of view (Get rid of model&amp;rsquo;s head for VR applications)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_lookat/&#34;&gt;Movable range for eye gaze/eyeball controlled by bone or BlendShape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_secondary/&#34;&gt;Spring bone (SpringBone/SpringBoneCollider)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;7-check-model-expressions-movements-in-play-mode-if-necessary&#34;&gt;7. Check model expressions/movements in play mode（If necessary）&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/aiueo.png&#34;   /&gt;


&lt;p&gt;Set&lt;code&gt;AnimationClip/AnimationController&lt;/code&gt;and set &lt;a href=&#34;../univrm/components/univrm_lookat/#target&#34;&gt;viewing target&lt;/a&gt; in&lt;code&gt;VRMLookAtHead -&amp;gt; Target&lt;/code&gt;(the head orientation towards the target). Then, check model&amp;rsquo;s movements and expressions. Also, fairly simple test scripts &amp;ldquo;AIUEO&amp;rdquo; and &amp;ldquo;Blinker&amp;rdquo; are provided. Click&lt;code&gt;Add Component&lt;/code&gt;at the bottom of model&amp;rsquo;s Inspector window to add “AIUEO” script or drag the script directly to Inspector. After &amp;ldquo;AIUEO&amp;rdquo; is set, lip synchronization animation that &amp;ldquo;aa&amp;rdquo;, &amp;ldquo;ih&amp;rdquo;, &amp;ldquo;ou&amp;rdquo;, &amp;ldquo;E&amp;rdquo;, &amp;ldquo;oh&amp;rdquo; switches in turn can be created. Similarly, if &amp;ldquo;Blinker&amp;rdquo; is set, eye blink animation that plays periodically can be created. See &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;runtime VRM loader sample&lt;/a&gt; (download UniVRM-RuntimeLoaderSample-0.XX) for more details on how to use these scripts.&lt;/p&gt;

&lt;h3 id=&#34;8-export-the-adjusted-vrm-model&#34;&gt;8. Export the adjusted VRM model&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu_enable.png&#34;   /&gt;


&lt;p&gt;After the adjustment is completed, select the model data in&lt;code&gt;Hierarchy&lt;/code&gt;and again export the model from&lt;code&gt;menu -&amp;gt; VRM -&amp;gt; export humanoid&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This time &lt;strong&gt;please uncheck &amp;ldquo;Force T Pose&amp;rdquo; and &amp;ldquo;Pose Freeze&amp;rdquo;&lt;/strong&gt;. They are only used for the first time (normalization processing). Name the file and export the adjusted VRM model.&lt;/p&gt;

&lt;h3 id=&#34;done&#34;&gt;Done！&lt;/h3&gt;

&lt;p&gt;Your VRM file is good to go. Let’s try to import the VRM file into applications that support VRM!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How to view VRM file</title>
      <link>https://vrm.dev/en/how_to_view_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/how_to_view_vrm/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;import-vrm-file-into-vrm-viewer&#34;&gt;Import VRM file into VRM Viewer&lt;/h2&gt;

&lt;p&gt;Download VRM Viewer from &lt;a href=&#34;https://github.com/vrm-c/UniVRMTest/releases&#34; target=&#34;_blank&#34;&gt;UniVRMTest/releases&lt;/a&gt;. Next, run the program and click&lt;code&gt;VRM Model&lt;/code&gt;. Then, select a VRM model available on your computer. The VRM model can be shown in the scene.&lt;/p&gt;

&lt;h2 id=&#34;import-vrm-file-into-unity-project&#34;&gt;Import VRM file into Unity Project&lt;/h2&gt;

&lt;p&gt;Importing VRM file by this way is a little tedious but you can see the information of a VRM model:&lt;/p&gt;

&lt;h3 id=&#34;1-create-an-empty-project-in-unity&#34;&gt;1. Create an empty project in Unity&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34;   /&gt;


&lt;p&gt;Create a new project at the start page (&lt;code&gt;New -&amp;gt; Create project&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&#34;2-import-univrm-package-into-the-created-project&#34;&gt;2. Import UniVRM package into the created project&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34;  /&gt;


&lt;p&gt;Download the latest unitypackage (UniVRM-0.XX) from &lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;UniVRM/releases&lt;/a&gt; and import it into the current project (&lt;code&gt;Assets -&amp;gt; Import Package -&amp;gt; Custom Package&lt;/code&gt;). The path of imported files is&lt;code&gt;../Assets/VRM&lt;/code&gt;. &lt;strong&gt;It is recommended to delete existing VRM folder included VRM in advance before package import&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;3-import-vrm-file-into-unity&#34;&gt;3. Import VRM file into Unity&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab_en.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;Drag and drop VRM file (~.vrm) into Assets folder&lt;/strong&gt;. The &lt;strong&gt;prefab&lt;/strong&gt; file of the imported VRM model data can be automatically generated.&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;Drag and drop the prefab file under the scene in the Hierarchy window&lt;/strong&gt;. The model data can be visualized as shown in the following image:&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;The VRM model&amp;rsquo;s information will be shown in the Inspector window&lt;/strong&gt; once the GameObject of the model data in&lt;code&gt;Hierarchy&lt;/code&gt;is selected.&lt;/p&gt;

&lt;h2 id=&#34;import-vrm-file-into-3d-builder&#34;&gt;Import VRM file into 3D Builder&lt;/h2&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_3dbuilder.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;Another simple way to visualize a VRM model or check whether a VRM file is viable is using Windows 3D Builder&lt;/strong&gt;. Please change file extension from ~. vrm to ~.glb. However, custom settings for VRM model will not be reflected.&lt;/p&gt;

&lt;h2 id=&#34;upload-download-vrm-file&#34;&gt;Upload / Download VRM file&lt;/h2&gt;

&lt;p&gt;Currently you can submit your VRM files to &lt;a href=&#34;https://3d.nicovideo.jp/&#34; target=&#34;_blank&#34;&gt;Nikoni 3D&lt;/a&gt; or &lt;a href=&#34;https://hub.vroid.com/&#34; target=&#34;_blank&#34;&gt;VRoid Hub&lt;/a&gt;. For Nikoni 3D, the submitted VRM file &lt;a href=&#34;https://3d.nicovideo.jp/search?word_type=tag&amp;amp;word=VRM&#34; target=&#34;_blank&#34;&gt;can be found here&lt;/a&gt;. Please check license information and try out those VRM models.
Also, when uploading a VRM file to Nikoni 3D, there is an option「バーチャルキャスト連携」(virtual cast cooperation) which can let users use the VRM model in &lt;a href=&#34;https://virtualcast.jp/&#34; target=&#34;_blank&#34;&gt;Virtual Cast&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: What applications that support VRM?</title>
      <link>https://vrm.dev/en/vrm_applications/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/vrm_applications/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;3d-model-submission-platform&#34;&gt;3D model submission platform&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seed.online/&#34; target=&#34;_blank&#34;&gt;The Seed Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3d.nicovideo.jp/&#34; target=&#34;_blank&#34;&gt;Niconi 3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.vroid.com/&#34; target=&#34;_blank&#34;&gt;VRoid Hub&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;character-maker&#34;&gt;Character maker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://vkatsu.jp/&#34; target=&#34;_blank&#34;&gt;Vkatsu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vroid.pixiv.net/&#34; target=&#34;_blank&#34;&gt;VRoid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fantia.jp/fanclubs/10552&#34; target=&#34;_blank&#34;&gt;SeshiruHenshin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;live-streaming-tool&#34;&gt;Live streaming tool&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://virtualcast.jp/&#34; target=&#34;_blank&#34;&gt;Virtual Cast&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;A VR live communication application that allows users to communicate in a shared virtual space in real-time. VRM model is importable.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://customcast.jp/&#34; target=&#34;_blank&#34;&gt;Custom Cast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/view/vdraw/&#34; target=&#34;_blank&#34;&gt;VDRAW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/vhitogata/&#34; target=&#34;_blank&#34;&gt;Hitogata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3tene.com/&#34; target=&#34;_blank&#34;&gt;3tene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.puppemoji.com/&#34; target=&#34;_blank&#34;&gt;Puppemoji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/870820/Wakaru_ver_beta/&#34; target=&#34;_blank&#34;&gt;Wakaru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sh-akira/VirtualMotionCapture&#34; target=&#34;_blank&#34;&gt;VirtualMotionCapture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://facevtuber.com/&#34; target=&#34;_blank&#34;&gt;FaceVTuber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://materializer.co/lab/mayalive&#34; target=&#34;_blank&#34;&gt;Mayalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wevtubers.appspot.com/&#34; target=&#34;_blank&#34;&gt;WeVTuber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/m2wasabi/LiveAvatar&#34; target=&#34;_blank&#34;&gt;LiveAvatar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://biscrat.booth.pm/items/1193414&#34; target=&#34;_blank&#34;&gt;Clarie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://luppet.appspot.com/&#34; target=&#34;_blank&#34;&gt;Luppet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;metaverse&#34;&gt;Metaverse&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cluster.mu/&#34; target=&#34;_blank&#34;&gt;cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://naby.booth.pm/items/990663&#34; target=&#34;_blank&#34;&gt;VWorld&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;game&#34;&gt;Game&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wandv.jp/seiya/&#34; target=&#34;_blank&#34;&gt;SEIYA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://orenodinner.booth.pm/items/952450&#34; target=&#34;_blank&#34;&gt;BONFIRE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/867090/VR__TSUNTSUN_VR/&#34; target=&#34;_blank&#34;&gt;TSUN-TSUN VR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mediaplex.co.jp/korokoro/&#34; target=&#34;_blank&#34;&gt;KOROKORO System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;viewer&#34;&gt;Viewer&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.BooApps.VPocket&#34; target=&#34;_blank&#34;&gt;VPocket (Android / iOS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www43.atwiki.jp/beamman/&#34; target=&#34;_blank&#34;&gt;VRMViewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm-viewer.yukimochi.io/&#34; target=&#34;_blank&#34;&gt;VRM Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magicien/VRMQuickLook&#34; target=&#34;_blank&#34;&gt;VRMQuickLook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fantom1x.blog130.fc2.com/blog-entry-309.html&#34; target=&#34;_blank&#34;&gt;VRM Live Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kirurobo/UniWinApi&#34; target=&#34;_blank&#34;&gt;UniWinApi Example project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://120byte.booth.pm/items/1099618&#34; target=&#34;_blank&#34;&gt;VRM OningyoAsobi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/m2wasabi/KinectV2VRM&#34; target=&#34;_blank&#34;&gt;KinectV2VRM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vrai.jp/vr_mocuvrm_en.html&#34; target=&#34;_blank&#34;&gt;MocuMocuVRM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;others&#34;&gt;Others&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://app.famitsu.com/gametitle/8356/&#34; target=&#34;_blank&#34;&gt;Vtabi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vismuth.net/&#34; target=&#34;_blank&#34;&gt;Vismuth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/t-takasaka/AI4Animation/tree/master/AI4Animation/Assets/Demo/ARKit&#34; target=&#34;_blank&#34;&gt;AI4Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34; target=&#34;_blank&#34;&gt;VRM4U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yashinut.com/archives/vstamp_app.html&#34; target=&#34;_blank&#34;&gt;vstamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/m2wasabi/VRMLoaderUI&#34; target=&#34;_blank&#34;&gt;VRMLoaderUI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
