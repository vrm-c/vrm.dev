<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VRM – UniVRM components</title>
    <link>https://vrm.dev/en/univrm/components/</link>
    <description>Recent content in UniVRM components on VRM</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Apr 2018 16:30:00 +0900</lastBuildDate>
    
	  <atom:link href="https://vrm.dev/en/univrm/components/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Model Information</title>
      <link>https://vrm.dev/en/univrm/components/univrm_meta/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/univrm/components/univrm_meta/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;vrmmeta&#34;&gt;VRMMeta&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/meta.png&#34; alt=&#34;meta&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMMeta component&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;information&#34;&gt;Information&lt;/h3&gt;

&lt;h4 id=&#34;title&#34;&gt;Title&lt;/h4&gt;

&lt;p&gt;Set the name of the VRM model&lt;/p&gt;

&lt;h4 id=&#34;author&#34;&gt;Author&lt;/h4&gt;

&lt;p&gt;Enter the author name of the VRM model&lt;/p&gt;

&lt;h4 id=&#34;contact-information&#34;&gt;Contact Information&lt;/h4&gt;

&lt;p&gt;Enter the contact information of the author&lt;/p&gt;

&lt;h4 id=&#34;reference&#34;&gt;Reference&lt;/h4&gt;

&lt;p&gt;Original / Related works of this avatar (URL), if any&lt;/p&gt;

&lt;h4 id=&#34;thumbnail&#34;&gt;Thumbnail&lt;/h4&gt;

&lt;p&gt;Register the thumbnail of the VRM model. A texture resolution about 2048x2048 is recommended.&lt;/p&gt;

&lt;h4 id=&#34;version&#34;&gt;Version&lt;/h4&gt;

&lt;p&gt;Specify the model version with character string.
Any description is OK.&lt;/p&gt;

&lt;h3 id=&#34;license&#34;&gt;License&lt;/h3&gt;

&lt;h4 id=&#34;personation-characterization-permission&#34;&gt;Personation / Characterization Permission&lt;/h4&gt;

&lt;h5 id=&#34;a-person-who-can-perform-with-this-avatar&#34;&gt;A person who can perform with this avatar&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Only Author&lt;/li&gt;
&lt;li&gt;Explicitly Licensed Person&lt;/li&gt;
&lt;li&gt;Everyone&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;permission-to-perform-violent-acts-with-this-avatar&#34;&gt;Permission to perform violent acts with this avatar&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;permission-to-perform-sexual-acts-with-this-avatar&#34;&gt;Permission to perform sexual acts with this avatar&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;for-commercial-use&#34;&gt;For commercial use&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Disallow&lt;/li&gt;
&lt;li&gt;Allow&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;other-license-url&#34;&gt;Other License Url&lt;/h5&gt;

&lt;p&gt;If there are any conditions not mentioned above, put the URL link of the license document here.&lt;/p&gt;

&lt;h4 id=&#34;redistribution-modifications-license&#34;&gt;Redistribution / Modifications License&lt;/h4&gt;

&lt;h5 id=&#34;license-type&#34;&gt;License Type&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Redistribution Prohibited&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Copyright wavier(CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY License(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC License(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SA License(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SA License(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY ND License(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC ND License(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;other-license-url-1&#34;&gt;Other License Url&lt;/h5&gt;

&lt;p&gt;If “Other” is selected, put the URL link of the license document here.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: BlendShape Setting</title>
      <link>https://vrm.dev/en/univrm/components/univrm_blendshape/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/univrm/components/univrm_blendshape/</guid>
      <description>
        
        
        

&lt;p&gt;New features introduced in UniVRM v0.45 &lt;a href=&#34;https://github.com/vrm-c/UniVRM/wiki/BlendShape-Setup&#34; target=&#34;_blank&#34;&gt;can be found here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;vrmblendshapeproxy&#34;&gt;VRMBlendShapeProxy&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxy.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The figure above is VRMBlendShapeProxy in the Inspector window at runtime. VRMBlendShapeProxy can be enabled by clicking the play button in edit mode&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;How to use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set BlendShapeAvatar &lt;code&gt;VRMBlendShapeProxy-&amp;gt;BlendShapeAvatar&lt;/code&gt; in the Inspector&lt;/li&gt;
&lt;li&gt;Change BlendShapeClip value between 0 and 1 at runtime (e.g. BLINK, JOY)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;blendshapeavatar&#34;&gt;BlendShapeAvatar&lt;/h2&gt;

&lt;p&gt;Expressions can be created in the Inspector.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyEditor.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Double click the&lt;code&gt;Blend Shape Avatar&lt;/code&gt;box&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeAvatarAsset.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Click BlendShape directly here (the highlighted file)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeAvatarEditor.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The Inspector of BlendShape editor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Select expressions and customize the values.
For example, we select&lt;code&gt;Fun&lt;/code&gt;and edit its expressions as shown in the following:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClip.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Example: Set&lt;code&gt;mouth_smile&lt;/code&gt;,&lt;code&gt;eye_smile&lt;/code&gt;and&lt;code&gt;eyeblow_smile&lt;/code&gt;to 100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The individual blend shapes such as eyebrow, eye and mouth can be merged into one expression like the image above. Created BlendShape names can be specified.&lt;/p&gt;

&lt;p&gt;After changing slider value and creating BlendShape, click the Apply button for saving the current status.&lt;/p&gt;

&lt;h2 id=&#34;blendshape-preset&#34;&gt;BlendShape preset&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShape_Preset.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Select&lt;code&gt;Preset&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The predefined names for the BlendShape clips. The following predefined expressions are available:&lt;/p&gt;

&lt;h3 id=&#34;neutral&#34;&gt;NEUTRAL&lt;/h3&gt;

&lt;p&gt;Specified as the standard facial expression and assumed to be used in standby state.&lt;/p&gt;

&lt;h3 id=&#34;a-i-u-e-o&#34;&gt;A, I, U, E, O&lt;/h3&gt;

&lt;p&gt;Corresponds to the sound of lip-sync&lt;code&gt;aa・ih・ou・E・oh&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;blink&#34;&gt;Blink&lt;/h3&gt;

&lt;p&gt;Eye blink.&lt;/p&gt;

&lt;h3 id=&#34;blink-l-blink-r&#34;&gt;Blink_L, Blink_R&lt;/h3&gt;

&lt;p&gt;Blinks with only one eye.&lt;/p&gt;

&lt;h3 id=&#34;joy-angry-sorrow-fun&#34;&gt;Joy, Angry, Sorrow, Fun&lt;/h3&gt;

&lt;p&gt;Emotion.&lt;/p&gt;

&lt;h3 id=&#34;lookup-lookdown-lookleft-lookright&#34;&gt;LookUp, LookDown, LookLeft, LookRight&lt;/h3&gt;

&lt;p&gt;Used when the model&amp;rsquo;s eyes are controlled by BlendShape.&lt;/p&gt;

&lt;h3 id=&#34;unknown&#34;&gt;Unknown&lt;/h3&gt;

&lt;p&gt;New created expressions are specified as &amp;ldquo;Unknown&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;change-the-value-of-blendshapeproxy-at-runtime&#34;&gt;Change the value of BlendShapeProxy (at runtime)&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Preset&lt;/code&gt;is used&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can operate expressions from the Inspector.&lt;/p&gt;

&lt;h2 id=&#34;option-add-additional-facial-expressions&#34;&gt;[Option] Add additional facial expressions&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Double click the&lt;code&gt;Blend Shape Avatar&lt;/code&gt;box and click&lt;code&gt;Add BlendShapeClip&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Enter a name for the new BlendShapeClip file (BlendShapeClipName.asset) and save it. Then, select the new generated button in the BlendShapeClip list (the last button) and enter a name. Also, please set facial expression values for new BlendShape clips.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClipOption.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Click the new expression &amp;ldquo;びっくり&amp;rdquo; (surprised)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can call it from the codes shown as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Call this expression with string since it belongs to unknown category
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SetValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;びっくり&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Assign a value between the range 0~1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the setting is done, don&amp;rsquo;t forget to export VRM file for being able to use the created expressions at runtime.&lt;/p&gt;

&lt;h2 id=&#34;option-morph-material-color&#34;&gt;[Option] Morph material color&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClipMaterial.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The setting of Material morph. Double click the&lt;code&gt;Current clip&lt;/code&gt;box or directly select the BlendShape clip (e.g. BlendShape.XXX or your created name) in the project view&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: First-Person View</title>
      <link>https://vrm.dev/en/univrm/components/univrm_firstperson/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/univrm/components/univrm_firstperson/</guid>
      <description>
        
        
        

&lt;h1 id=&#34;vrmfirstperson&#34;&gt;VRMFirstPerson&lt;/h1&gt;

&lt;p&gt;The setting related to first-person perspectives.&lt;/p&gt;

&lt;h2 id=&#34;firstpersonbone&#34;&gt;FirstPersonBone&lt;/h2&gt;

&lt;p&gt;FirstPersonBone keeps track of a VR headset in a first-person view.
Normally the head bone is assigned as FirstPersonBone.&lt;/p&gt;

&lt;h2 id=&#34;firstpersonoffset&#34;&gt;FirstPersonOffset&lt;/h2&gt;

&lt;p&gt;The offset from the tracking position to the FirstPersonBone position. We assume the default value [0, 0.06, 0] is the offset between the head and the middle of the eyes.&lt;/p&gt;

&lt;h2 id=&#34;renderers&#34;&gt;Renderers&lt;/h2&gt;

&lt;p&gt;The settings for controlling mesh rendering on/off in a first-person view.&lt;/p&gt;

&lt;p&gt;When a VRM model is used in VR applications, the user may see the model&amp;rsquo;s head inside inadvertently, which is not a good experience of being immersed in VR worlds. To address this problem, we provide the function &lt;strong&gt;VRMFirstPerson&lt;/strong&gt; which can hide the model&amp;rsquo;s head in the first-person view. To test out first-person mode in Unity project, set up &lt;a href=&#34;../../api/univrm_use_firstperson/#specify-the-additional-render-layers-for-the-application&#34;&gt;render layer&lt;/a&gt; in the inspector window and call &lt;a href=&#34;../../api/univrm_use_firstperson/#call-setup-function-at-runtime-and-set-layermask-in-camera&#34;&gt;first-person setup function&lt;/a&gt;. Then, go to&lt;code&gt;camera-&amp;gt;cull mask&lt;/code&gt;and select&lt;code&gt;EVERYTHING&lt;/code&gt;but&lt;code&gt;THIRDPERSON_ONLY_LAYER&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;the-case-for-the-head-being-separated&#34;&gt;The case for the head being separated&lt;/h3&gt;

&lt;p&gt;Set &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt; on the head.
Set &lt;strong&gt;Both&lt;/strong&gt; on the rest parts.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;For a VRM model (below), the head is set to &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt; and the rest parts of the body are set to &lt;strong&gt;Both&lt;/strong&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson_runtime.png&#34; alt=&#34;firstperson&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Example: The meshes set to &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt; are not displayed in the first-person view.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;the-case-for-the-head-not-being-separated&#34;&gt;The case for the head not being separated&lt;/h3&gt;

&lt;p&gt;Please set &lt;strong&gt;Auto&lt;/strong&gt;.
Except the model&amp;rsquo;s head, the other parts are copied and treated as &lt;strong&gt;FirstPersonOnly&lt;/strong&gt;.
The original model is treated as &lt;strong&gt;ThirdPersonOnly&lt;/strong&gt;.
The parts regarding the head bone and its descendants with weights will be eliminated.&lt;/p&gt;

&lt;h3 id=&#34;the-case-for-no-particular-setting&#34;&gt;The case for no particular setting&lt;/h3&gt;

&lt;p&gt;Please set &lt;strong&gt;Both&lt;/strong&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Eye Control</title>
      <link>https://vrm.dev/en/univrm/components/univrm_lookat/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/univrm/components/univrm_lookat/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;vrmlookathead&#34;&gt;VRMLookAtHead&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMLookAtHead.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMLookAtHead&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This component calculates the direction from the model&amp;rsquo;s head to the target.&lt;/p&gt;

&lt;h3 id=&#34;target&#34;&gt;Target&lt;/h3&gt;

&lt;p&gt;The target to be tracked by the model&amp;rsquo;s eyes. If a camera is set as Target, the model will always look at the camera.&lt;/p&gt;

&lt;h2 id=&#34;eye-control-with-bone-vrmlookatboneapplyer&#34;&gt;Eye control with bone: VRMLookAtBoneApplyer&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMLookAtBoneApplyer.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMLookAtBoneApplyer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Apply the parameters of the calculated eye gaze direction of VRMLookAtHead to EyeBone.&lt;/p&gt;

&lt;h3 id=&#34;degreemapping&#34;&gt;DegreeMapping&lt;/h3&gt;

&lt;p&gt;Adjust angles when applying rotation to EyeBone.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HorizontalOuter: The angle limit of horizontally outward direction&lt;/li&gt;
&lt;li&gt;HorizontalInner: The angle limit of horizontally inward direction&lt;/li&gt;
&lt;li&gt;VerticalDown: The angle limit of vertically downward direction&lt;/li&gt;
&lt;li&gt;VerticalUp: The angle limit of vertically upward direction&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;eye-control-with-blendshape-vrmlookatblendshapeapplyer&#34;&gt;Eye control with BlendShape: VRMLookAtBlendShapeApplyer&lt;/h2&gt;

&lt;p&gt;The component for controlling the eyes with BlendShape.
Please delete VRMLookAtBoneApplyer and attach VRMLookAtBlendShapeApplyer instead.
Settings related to VRMLookAtBlendShape &lt;a href=&#34;https://github.com/vrm-c/UniVRM/wiki/LookAt-Settings&#34; target=&#34;_blank&#34;&gt;can be found here&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMSpringBone</title>
      <link>https://vrm.dev/en/univrm/components/univrm_secondary/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/en/univrm/components/univrm_secondary/</guid>
      <description>
        
        
        

&lt;p&gt;Spring bone setting.&lt;/p&gt;

&lt;h1 id=&#34;the-node-attached-by-spring-bones&#34;&gt;The node attached by spring bones&lt;/h1&gt;

&lt;p&gt;When VRM is imported, components related to spring bones are attached as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VRMSpringBone is attached to the node&lt;code&gt;secondary&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;VRMSpringBoneColliderGroup is restored to the node previously attached during the export.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Please check&lt;code&gt;secondary&lt;/code&gt;in the Hierarchy window if you cannot find VRMSpringBone&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;vrmspringbone&#34;&gt;VRMSpringBone&lt;/h1&gt;

&lt;p&gt;The setting for making objects swaying such as tail, hair, clothes and so on. Please set the parent GameObject of an object in&lt;code&gt;Root Bones&lt;/code&gt;. Drag an object (e.g.&lt;code&gt;hair1_L&lt;/code&gt;) to the&lt;code&gt;Element X&lt;/code&gt;box (e.g.&lt;code&gt;Element 0&lt;/code&gt;). The number of elements can be changed in&lt;code&gt;Size&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMSpringBone.png&#34; alt=&#34;lookat&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Example: Set the hair and ribbon in&lt;code&gt;Root Bones&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;That&amp;rsquo;s it. The specified objects will perform swaying movements.&lt;/p&gt;

&lt;h1 id=&#34;option-vrmspringbonecollidergroup-collision-detection&#34;&gt;[Option] VRMSpringBoneColliderGroup (Collision detection)&lt;/h1&gt;

&lt;p&gt;The collision detection mechanism can be added to prevent swaying objects from penetrating user-specified parts.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/collider.png&#34; alt=&#34;collider&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Add the collision detection mechanism on the head (VRMSpringBoneColliderGroup)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For example, attach VRMSpringBoneColliderGroup script to&lt;code&gt;head&lt;/code&gt;and drag&lt;code&gt;head&lt;/code&gt;to the&lt;code&gt;Element 0&lt;/code&gt;box in&lt;code&gt;Collider Groups&lt;/code&gt;. You can change its offset and radius value by double clicking the&lt;code&gt;Element&lt;/code&gt;box in&lt;code&gt;Collider Groups&lt;/code&gt;.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/set_collider.png&#34; alt=&#34;set_collider&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Attach and set&lt;code&gt;head&lt;/code&gt;in&lt;code&gt;Collider Groups&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/spring_gizmo.png&#34; alt=&#34;gizmo&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Gizmo at runtime (check&lt;code&gt;Draw Gizmo&lt;/code&gt;in the Inspector of VRMSpringBone)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;set-multiple-collision-detections-in-one-vrmspringbonecollidergroup&#34;&gt;Set multiple collision detections in one VRMSpringBoneColliderGroup&lt;/h2&gt;

&lt;p&gt;Though the default is only set for one collision detection (the range of a sphere ball), users can change the setting to multiple detections (multiple balls) by changing the value of&lt;code&gt;Size&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
