<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VRM – VRMについて</title>
    <link>https://vrm.dev/vrm/</link>
    <description>Recent content in VRMについて on VRM</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Apr 2018 16:30:00 +0900</lastBuildDate>
    
	  <atom:link href="https://vrm.dev/vrm/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 「VRM」って何？どんなことができる？</title>
      <link>https://vrm.dev/vrm_about/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/vrm_about/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;vrm-とは&#34;&gt;「VRM」とは&lt;/h2&gt;

&lt;p&gt;VR(Virtual Reality)やVTuberなどにおいて&lt;strong&gt;「キャラクターや人型のアバター（の3Dモデル）」&lt;/strong&gt;を取り扱おうとした場合、従来はアプリケーションごと・3Dモデルデータごとに独自のシステムを開発したり細かく調整したりする必要がありました。&lt;/p&gt;

&lt;p&gt;というのも…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3Dモデルを作成したクリエイターや使用したモデリングツールによって「作法」が違いデータの状況がひとつひとつ異なっている

&lt;ul&gt;
&lt;li&gt;座標系が異なっていたり、スケールが異なっていたり、初期姿勢が異なっていたり、表情の表現方法が異なっていたり…&lt;/li&gt;
&lt;li&gt;もちろん、骨（ボーン）の入れ方も状況によって異なっていたり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3Dモデルデータを取り扱うフォーマットは、各社各様で仕様が必要以上に複雑であったり、必要な情報が足りなかったりしている

&lt;ul&gt;
&lt;li&gt;対応ソフトが多い「FBXファイル」はアプリケーションごとに読めたり読めなかったり。どのアプリケーションのどのバージョンで出力したFBXなのか…というのを気にしたかたも多いと思います&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3Dモデルデータを「アバターとして使用する」という観点で見ると、必要な情報が整備されていない

&lt;ul&gt;
&lt;li&gt;たとえば一人称視点を実現するための視点の位置はどこか、一人称視点から表示するためには頭部の表示を消さなければならないが、具体的にはどこを消すのか、など&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VRでのアバター表現が急速に盛り上がるなか、こういった状況が続くとアプリケーション開発者にとっても、3Dモデルクリエイターにとっても二度手間三度手間になってしまいます。
この状況を改善するために&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「人型のキャラクターやアバター」において&lt;/li&gt;
&lt;li&gt;細かいモデルデータの差違を吸収・統一し&lt;/li&gt;
&lt;li&gt;アプリケーション側の取り扱いを簡単にする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;「VRM」は、このような特徴のある「プラットフォーム非依存の3Dアバターファイルフォーマット」を提案する&lt;/strong&gt;ものです。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;vrmで何ができるの&#34;&gt;VRMで何ができるの？&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_app.png&#34; alt=&#34;VRM applications&#34;  /&gt;

&lt;strong&gt;VRM対応アプリケーションで同じアバター（3Dモデル）データを使うことができます。&lt;/strong&gt;
対応アプリケーションが揃うと、こんな未来になるはず…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VRM対応のキャラクタ製作ツールで自分のアバターをつくる&lt;/li&gt;
&lt;li&gt;自分のアバターで生放送をしていたら、友達も生放送をはじめたので友達の放送に凸しに行った&lt;/li&gt;
&lt;li&gt;放送後そのままVRゲームを起動、自分のアバターでVR世界を探索&lt;/li&gt;
&lt;li&gt;ゲームに飽きたのでVR世界のチャットへ移動。同じアバターで友達と遊ぶ&lt;/li&gt;
&lt;li&gt;翌日はVR勉強会にVR参加。もちろんアバターはいつもの姿で&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;「自分の」アバター（3Dモデルデータ）を「VRM」で取り扱うことで、いろいろなVRM対応アプリケーションやゲームで相互に行き来できるようになります。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;生放送、動画作成、ゲーム、チャット…。いまは複数のVR世界が分断されています。この分断されたVR世界をつなぐための第一歩、それがVRMなのです。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;vrmの特徴&#34;&gt;VRMの特徴&lt;/h2&gt;

&lt;p&gt;VRMでは「人型」の「キャラクター・アバター」を取り扱うことができます。&lt;strong&gt;UnityでVRMファイルを読み書きする標準実装が提供されます&lt;/strong&gt;が、&lt;strong&gt;フォーマット自体はプラットフォーム非依存&lt;/strong&gt;であり他エンジンや環境でも取り扱うことが可能です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プラットフォーム非依存で人型のキャラクター3Dモデルデータを取り扱うことが可能&lt;/li&gt;
&lt;li&gt;3D標準フォーマット glTF2.0をベースとして、人型モデルを取り扱うための制約と拡張を加えたフォーマット。標準フォーマットをベースとしているため実装も容易&lt;/li&gt;
&lt;li&gt;テクスチャやマテリアルなどすべてのデータを含めて１ファイルにまとまる。ファイル一つで取り扱い可能&lt;/li&gt;
&lt;li&gt;スケール（1.00 = 1m）・座標系と向き（Y-up, -Z方向向き）・骨の構造（Unity Humanoid準拠構成, Tスタンス, 各骨にローカルの回転などを入れない）などについて標準の構成が決められておりモデリングツールによる差違の影響を受けない&lt;/li&gt;
&lt;li&gt;Blend Shapeやマテリアルの透明度など「キャラクターの表情」を取り扱うためにはさまざまな技法が使われるが、その技法の差違をVRM側で吸収し統一したAPIで操作できる&lt;/li&gt;
&lt;li&gt;VRでのアバター利用のための、&lt;strong&gt;「一人称視点再現のための情報」&lt;/strong&gt;に対応。&lt;/li&gt;
&lt;li&gt;キャラクターの髪の毛などについて、物理エンジンに依存しない「揺れ物」標準実装を用意、設定可能に&lt;/li&gt;
&lt;li&gt;標準実装としてのマテリアル（シェーダ）を用意。標準的なPBRだけでなくトゥーンシェーディングやUnlitレンダリングを設定可能&lt;/li&gt;
&lt;li&gt;タイトル・作者名などのメタ情報だけでなく、サムネイルや&lt;strong&gt;VR時代に即した、アバターに特化したライセンス情報&lt;/strong&gt;も内包可能&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VRMは複数アプリケーション間で相互利用されることが想定される、VR時代の3Dアバターフォーマットです。たとえば「ネットワークに相互接続されたアバターによるVRコミュニケーション」を考えた場合、&lt;strong&gt;自分のアバターデータを「他の人から自分の姿が見えるように」他のユーザへ送信する&lt;/strong&gt;、ということも行われることになります。
この場合、従来の考え方に基づく「再配布」規定だけでは対応できない場面が考えられます。そのため、VRMでは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;モデルデータ自体に対しての改変・再配布規定（Creative Commonsなどから設定可能）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のほかに&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;モデルデータを使用して「人格を演じる」ことについての許諾規定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を&lt;strong&gt;ファイルに設定できる&lt;/strong&gt;など、VR時代を想定したフォーマットとなっています。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;vrmファイルに設定できるライセンスデータ&#34;&gt;VRMファイルに設定できるライセンスデータ&lt;/h2&gt;

&lt;h3 id=&#34;アバターの人格に関する許諾範囲-personation-charaterization-permission&#34;&gt;アバターの人格に関する許諾範囲(Personation / Charaterization Permission)&lt;/h3&gt;

&lt;h4 id=&#34;アバターに人格を与えることの許諾範囲-a-person-who-can-perform-with-this-avatar&#34;&gt;アバターに人格を与えることの許諾範囲(A person who can perform with this avatar)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;アバターを操作することはアバター作者にのみ許される(Only Author)&lt;/li&gt;
&lt;li&gt;明確に許可された人限定(Explictly Licensed Person)&lt;/li&gt;
&lt;li&gt;全員に許可(Everyone)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;このアバターを用いて暴力表現を演じることの許可-violent-acts-using-this-avatar&#34;&gt;このアバターを用いて暴力表現を演じることの許可(Violent acts using this avatar)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;このアバターを用いて性的表現を演じることの許可-sexuality-acts-using-this-avatar&#34;&gt;このアバターを用いて性的表現を演じることの許可(Sexuality acts using this avatar)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;商用利用の許可-for-commercial-use&#34;&gt;商用利用の許可(For commercial use)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;その他のライセンス条件-other-license-url&#34;&gt;その他のライセンス条件(Other License Url)&lt;/h4&gt;

&lt;p&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p&gt;

&lt;h3 id=&#34;再配布-改変に関する許諾範囲-redistribution-modifications-license&#34;&gt;再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/h3&gt;

&lt;h4 id=&#34;ライセンスタイプ-license-type&#34;&gt;ライセンスタイプ(License Type)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;再配布禁止(Redistribution Prohibited)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34; target=&#34;_blank&#34;&gt;著作権放棄(CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BYライセンス(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;その他(Other)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;その他ライセンス条件-other-license-url&#34;&gt;その他ライセンス条件(Other License Url)&lt;/h4&gt;

&lt;p&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMファイルを作ってみたい</title>
      <link>https://vrm.dev/how_to_make_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/how_to_make_vrm/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;vrmファイルのつくりかた-既存3dモデルからのコンバート&#34;&gt;VRMファイルのつくりかた（既存3Dモデルからのコンバート）&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_workflow.png&#34; alt=&#34;vrm workflow&#34;  /&gt;

VRMファイルをつくるためには、&lt;a href=&#34;https://unity3d.com/jp&#34; target=&#34;_blank&#34;&gt;Unity&lt;/a&gt;と&lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34; target=&#34;_blank&#34;&gt;UniVRM&lt;/a&gt;を使用します。
おおまかな作業のながれは以下のようになります&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Unityで3Dモデルデータと&lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34; target=&#34;_blank&#34;&gt;UniVRM&lt;/a&gt;を読み込む。Unity上で大きさやマテリアルなどを調整・設定する&lt;/li&gt;
&lt;li&gt;一度UnityからVRMファイルを出力する（※正規化と呼びます）&lt;/li&gt;
&lt;li&gt;上記出力した VRMファイルをUnityで読み込み、Unity上でVRM独自の設定（ライセンス・揺れ物・表情・目線など）を行う

&lt;ul&gt;
&lt;li&gt;場合によってはここでUnity上でモデルを実際に動かして（再生して）挙動を確認する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;設定が終わったら再度VRMファイルを出力する。すべての設定が埋め込まれたVRMファイルが出力されます。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ポイントは、 &lt;strong&gt;すでに作られた3DモデルをUnity上で調整し、Unityから出力する&lt;/strong&gt;ということと、&lt;strong&gt;一度VRMファイルを作り、それを再度読み込んでから細かい調整・設定を行う&lt;/strong&gt;ところとなります。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;1-unityで空のプロジェクトを作る&#34;&gt;1.Unityで空のプロジェクトを作る&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34;   /&gt;

Unityを起動し、プロジェクトを新規作成します。New→Create projectをクリック。&lt;/p&gt;

&lt;h3 id=&#34;2-unityにunivrmをインストール&#34;&gt;2.UnityにUniVRMをインストール&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34;  /&gt;

&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;UniVRM/releases&lt;/a&gt;から最新のunitypackageをダウンロードし、&lt;code&gt;Assets/VRM&lt;/code&gt;にインストールします。
&lt;strong&gt;既存のVRMが存在している場合、あらかじめVRMフォルダを削除することを推奨&lt;/strong&gt;しています。
UniVRM-XXX.unitypackageファイルをUnityにインポートしてください。&lt;/p&gt;

&lt;h3 id=&#34;3-unityでhumanoidとして扱えるモデルデータを用意します&#34;&gt;3.UnityでHumanoidとして扱えるモデルデータを用意します&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_generic.png&#34;   /&gt;

FBX等のUnityで読み込めるHumanoidモデルを用意しUnityにインポートします。ボーンの設定もされている必要があります。また、&lt;strong&gt;必ずご自分で作られたモデル、ないし、加工しVRアバターとして使うことが許諾されているモデルデータをご用意ください&lt;/strong&gt;。後述しますが、&lt;strong&gt;VRMファイル自体にライセンス情報を記述する項目がありますので、特にその項目については権利者自身が設定するようにしてください&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;インポート後、FBXのImport SettingsのRigタブでAnimationTypeをHumanoidにしてください。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/fix_eye.png&#34;   /&gt;

FBXインポート時の自動認識が食い違うことがありますので、ボーンの設定が間違っていたら修正します&lt;/p&gt;

&lt;p&gt;例&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;前髪に顎ボーンが割り当てられる&lt;/li&gt;
&lt;li&gt;目のハイライトに目ボーンが割り当てられる&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-モデルデータを調整し-メニューから一度vrmをエクスポートする-正規化&#34;&gt;4.モデルデータを調整し、メニューから一度VRMをエクスポートする（※正規化）&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene.png&#34;   /&gt;

3.で用意したモデルデータを&lt;strong&gt;一度Unityのシーンに配置します&lt;/strong&gt;。その上で、以下の項目を調整します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;モデルの位置

&lt;ul&gt;
&lt;li&gt;モデルは原点に位置する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;モデルのスケール

&lt;ul&gt;
&lt;li&gt;1.0 = 1m&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;モデルの向き

&lt;ul&gt;
&lt;li&gt;モデルは+Zの方向に向いている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;質感（マテリアル/シェーダ）

&lt;ul&gt;
&lt;li&gt;以下のシェーダの中から使用することを&lt;strong&gt;強く推奨&lt;/strong&gt;します。

&lt;ul&gt;
&lt;li&gt;PBR

&lt;ul&gt;
&lt;li&gt;Standardシェーダー(Unity標準)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Unlit系シェーダー

&lt;ul&gt;
&lt;li&gt;VRM/UnlitTexture (UnityのUnit/Textureと同じ)&lt;/li&gt;
&lt;li&gt;VRM/UnlitCutout (UnityのUnit/Cutoutと同じ)&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparent (UnityのUnit/Transparentと同じ)&lt;/li&gt;
&lt;li&gt;VRM/UnlitTransparentZWrite (アルファブレンディングかつZWriteありです。実体のある半透明物への適用を想定しています)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Toonシェーダー

&lt;ul&gt;
&lt;li&gt;VRM/MToon (照明対応トゥーンシェーダ）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu_enable.png&#34;   /&gt;

調整が終わったら、UnityのHierarchyでモデルデータを選択し、メニューからVRM→Export humanoidを実行します&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog.png&#34;   /&gt;

チェックボックスを設定してExportを押してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Force T Pose

&lt;ul&gt;
&lt;li&gt;回転・スケールの除去前にモデルを強制的に&lt;a href=&#34;../vrm_tpose/&#34;&gt;T-Pose&lt;/a&gt;にします。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pose Freeze

&lt;ul&gt;
&lt;li&gt;回転・スケールの除去処理を実行するか否か。VRMの規約に合致するように&lt;strong&gt;モデルを正規化する処理&lt;/strong&gt;です。&lt;strong&gt;初回は必ずチェックを入れてください&lt;/strong&gt;。事前にこの処理を通過させることにより各種コンポーネントが正しく動作するようになります。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exportを押すと、VRMファイルが出力されます。ファイル名はわかりやすいように「(元のモデル名)_Normalized.vrm」などとしておくとよいでしょう。T-Poseとモデルの正規化の詳細は&lt;a href=&#34;https://github.com/vrm-c/UniVRM/wiki/T-Poseとモデルの正規化の詳細&#34; target=&#34;_blank&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;5-先ほどエクスポートしたvrmを再度unity上に読み込む&#34;&gt;5.先ほどエクスポートしたVRMを再度Unity上に読み込む&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;4.で出力したVRMファイルを、UnityのAssetsにドラッグ＆ドロップする&lt;/strong&gt;だけで、VRMファイルがインポートされ&lt;strong&gt;モデルデータのPrefabが生成されます&lt;/strong&gt;。&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34;   /&gt;


&lt;p&gt;さきほど4.で配置したモデルデータをいったん消し、&lt;strong&gt;VRMから生成されたPrefabをあらためてシーンに配置します&lt;/strong&gt;。
すると、メッシュなどが正規化されたモデルデータが表示されます。&lt;/p&gt;

&lt;h3 id=&#34;6-vrm独自の設定を行う&#34;&gt;6.VRM独自の設定を行う&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;


&lt;p&gt;5.で読み込まれたモデルデータをHierarchyで選択すると、&lt;strong&gt;インスペクタにさまざまな設定項目&lt;/strong&gt;があらわれます。また、&lt;strong&gt;secondaryには揺れ物の設定&lt;/strong&gt;が入っています。これらを設定していきます。
&lt;strong&gt;少なくとも、タイトル・作者・ライセンス情報&lt;/strong&gt;は埋めるようにしてください。&lt;strong&gt;特にライセンス情報は重要です！&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Information（一般情報）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title

&lt;ul&gt;
&lt;li&gt;アバターモデル名称。自由入力&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Version

&lt;ul&gt;
&lt;li&gt;アバターモデルのバージョン。自由入力&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Author

&lt;ul&gt;
&lt;li&gt;作者名&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Contact Information

&lt;ul&gt;
&lt;li&gt;作者への連絡先&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Reference

&lt;ul&gt;
&lt;li&gt;アバターの「親作品」となるようなものがあれば、その情報&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;License（使用許諾・ライセンス情報）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;アバターの人格に関する許諾範囲 (Personation / Charaterization Permission)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アバターに人格を与えることの許諾範囲 (A person who can perform with this avatar)

&lt;ul&gt;
&lt;li&gt;アバターを操作することはアバター作者にのみ許される(Only Author)&lt;/li&gt;
&lt;li&gt;明確に許可された人限定(Explictly Licensed Person)&lt;/li&gt;
&lt;li&gt;全員に許可(Everyone)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;このアバターを用いて暴力表現を演じることの許可(Violent acts using this avatar)

&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;このアバターを用いて性的表現を演じることの許可(Sexuality acts using this avatar)

&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;商用利用の許可(For commercial use)

&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;その他のライセンス条件(Other License Url)

&lt;ul&gt;
&lt;li&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ライセンスタイプ(License Type)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;再配布禁止(Redistribution Prohibited)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34; target=&#34;_blank&#34;&gt;著作権放棄(CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BYライセンス(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34; target=&#34;_blank&#34;&gt;Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;その他(Other)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;その他ライセンス条件(Other License Url)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ほかに、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_blendshape/&#34;&gt;表情や口パクの設定（BlendShape）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_firstperson/&#34;&gt;一人称視点の設定（一人称視点でモデルを操作する場合、邪魔になる頭などのパーツを指定する、標準の視点位置を設定する）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_lookat/&#34;&gt;視線・眼球の可動範囲と可動曲線の設定。ボーンによる眼球回転だけでなく、BlendShapeによる眼球アニメーションにも対応。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../univrm/components/univrm_secondary/&#34;&gt;揺れ物（SpringBone/SpringBoneCollider）の設定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;がありますので必要に応じて設定していきます。&lt;/p&gt;

&lt;h3 id=&#34;7-unity上で再生し挙動を確認する-必要であれば&#34;&gt;7.Unity上で再生し挙動を確認する（※必要であれば）&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/aiueo.png&#34;   /&gt;


&lt;p&gt;AnimationClip/AnimationControllerをセットしたり、VRMLookAtHeadのTargetに&lt;a href=&#34;../univrm/components/univrm_lookat/#target&#34;&gt;GameObject&lt;/a&gt;をセットしたり（視線がどこを向くかの設定）して、実際にUnity上で動作を確認します。
また、非常に簡単なテストスクリプト「AIUEO」と「Blinker」を用意しています。Add Componentから「AIUEO」を選んでセットすれば「あ」「い」「う」「え」「お」の口の形に順番に切り替わるアニメーションが、「Blinker」を選んでセットすれば定期的にまばたきのアニメーションが行われます。&lt;/p&gt;

&lt;h3 id=&#34;8-vrmファイルを出力する&#34;&gt;8.VRMファイルを出力する&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu_enable.png&#34;   /&gt;

調整が終わったら、UnityのHierarchyでモデルデータを選択し、再度メニューからVRM→Export humanoidを実行します&lt;/p&gt;

&lt;p&gt;このとき、&lt;strong&gt;「Force T Pose」と「Pose Freeze」のチェックは外してください&lt;/strong&gt;。このチェックは初回（正規化）のときのみ使用します。
ファイル名を指定してVRMファイルを出力します&lt;/p&gt;

&lt;h3 id=&#34;完成&#34;&gt;完成！&lt;/h3&gt;

&lt;p&gt;これでセットアップ済のVRMファイルが出来ました。対応アプリケーションに読み込ませてみましょう！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMファイルを眺めてみたい</title>
      <link>https://vrm.dev/how_to_view_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/how_to_view_vrm/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;vrmファイルの読み込みかた&#34;&gt;VRMファイルの読み込みかた&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRMTest/releases&#34; target=&#34;_blank&#34;&gt;UniVRMTest/releases&lt;/a&gt;からVRMファイルのビューアーアプリケーションをダウンロードしてください。プログラムを実行してVRMモデルを選んでモデルが表示されます。
また、以下の方法は少し面倒ですが、UnityでVRMファイルを読み込むことで内容を確認することができます。&lt;/p&gt;

&lt;h3 id=&#34;1-unityで空のプロジェクトを作る&#34;&gt;1.Unityで空のプロジェクトを作る&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34;   /&gt;

Unityを起動し、プロジェクトを新規作成します。New→Create projectをクリック。&lt;/p&gt;

&lt;h3 id=&#34;2-unityにunivrmをインストール&#34;&gt;2.UnityにUniVRMをインストール&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.png&#34; alt=&#34;package_import&#34;  /&gt;

&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34; target=&#34;_blank&#34;&gt;UniVRM/releases&lt;/a&gt;から最新のunitypackageをダウンロードし、&lt;code&gt;Assets/VRM&lt;/code&gt;にインストールします。
&lt;strong&gt;既存のVRMが存在している場合、あらかじめVRMフォルダを削除することを推奨&lt;/strong&gt;しています。
UniVRM-XXX.unitypackageファイルをUnityにインポートしてください。&lt;/p&gt;

&lt;h3 id=&#34;3-vrmファイルをunity上に読み込む&#34;&gt;3.VRMファイルをUnity上に読み込む&lt;/h3&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;VRMファイルを、UnityのAssetsにドラッグ＆ドロップする&lt;/strong&gt;だけで、VRMファイルがインポートされ&lt;strong&gt;モデルデータのPrefabが生成されます&lt;/strong&gt;。&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34;   /&gt;


&lt;p&gt;&lt;strong&gt;VRMから生成されたPrefabをあらためてシーンに配置します&lt;/strong&gt;。
すると、モデルデータが表示されます。&lt;/p&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;


&lt;p&gt;読み込まれたモデルデータをHierarchyで選択すると、&lt;strong&gt;インスペクタに各種情報が表示されます&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&#34;vrmファイルの読み込みかた-簡易版&#34;&gt;VRMファイルの読み込みかた（簡易版）&lt;/h2&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_3dbuilder.png&#34;   /&gt;


&lt;p&gt;～.vrmとなっているファイル拡張子を ～.glb に変更すると、&lt;strong&gt;Windows 10標準搭載の3D Builderで読み込み確認することができます&lt;/strong&gt;。（ただしVRM独自の設定は反映されません）&lt;/p&gt;

&lt;h2 id=&#34;vrmファイルを投稿する-探す&#34;&gt;VRMファイルを投稿する・探す&lt;/h2&gt;

&lt;p&gt;現在、&lt;a href=&#34;https://3d.nicovideo.jp/&#34; target=&#34;_blank&#34;&gt;ニコニ立体&lt;/a&gt;または&lt;a href=&#34;https://hub.vroid.com/&#34; target=&#34;_blank&#34;&gt;VRoid Hub&lt;/a&gt;でVRMファイルの投稿ができます。
ニコニ立体では&lt;a href=&#34;https://3d.nicovideo.jp/search?word_type=tag&amp;amp;word=VRM&#34; target=&#34;_blank&#34;&gt;こちら&lt;/a&gt;から投稿されたVRMモデルデータのリストが見られます。ライセンスなど確認して使ってみてください。&lt;/p&gt;

&lt;p&gt;なお、ニコニ立体にご自分でVRMファイルを投稿する際、「バーチャルキャスト連携」を有効にすると&lt;a href=&#34;https://virtualcast.jp/&#34; target=&#34;_blank&#34;&gt;バーチャルキャスト&lt;/a&gt;から利用できます。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMファイルが使えるアプリケーションは？</title>
      <link>https://vrm.dev/vrm_applications/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/vrm_applications/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;3dキャラクター投稿プラットフォーム&#34;&gt;3Dキャラクター投稿プラットフォーム&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seed.online/&#34; target=&#34;_blank&#34;&gt;ザ・シードオンライン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3d.nicovideo.jp/&#34; target=&#34;_blank&#34;&gt;ニコニ立体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.vroid.com/&#34; target=&#34;_blank&#34;&gt;VRoid Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;キャラメイクツール&#34;&gt;キャラメイクツール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://vkatsu.jp/&#34; target=&#34;_blank&#34;&gt;Vカツ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vroid.pixiv.net/&#34; target=&#34;_blank&#34;&gt;VRoid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fantia.jp/fanclubs/10552&#34; target=&#34;_blank&#34;&gt;セシル変身アプリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;配信ツール&#34;&gt;配信ツール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://virtualcast.jp/&#34; target=&#34;_blank&#34;&gt;バーチャルキャスト&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;VR空間のスタジオをリアルタイムでコミュニケーションできるVRライブ・コミュニケーションサービス。モデルデータとしてVRMを採用、読み込み可能。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://customcast.jp/&#34; target=&#34;_blank&#34;&gt;カスタムキャスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/view/vdraw/&#34; target=&#34;_blank&#34;&gt;VDRAW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/vhitogata/&#34; target=&#34;_blank&#34;&gt;Hitogata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3tene.com/&#34; target=&#34;_blank&#34;&gt;3tene&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.puppemoji.com/&#34; target=&#34;_blank&#34;&gt;パペ文字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/870820/Wakaru_ver_beta/&#34; target=&#34;_blank&#34;&gt;Wakaru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sh-akira/VirtualMotionCapture&#34; target=&#34;_blank&#34;&gt;バーチャルモーションキャプチャー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://facevtuber.com/&#34; target=&#34;_blank&#34;&gt;FaceVTuber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://materializer.co/lab/mayalive&#34; target=&#34;_blank&#34;&gt;メイアライブ（オーダーメイド版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wevtubers.appspot.com/&#34; target=&#34;_blank&#34;&gt;WeVTuber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/m2wasabi/LiveAvatar&#34; target=&#34;_blank&#34;&gt;LiveAvatar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://biscrat.booth.pm/items/1193414&#34; target=&#34;_blank&#34;&gt;[VR撮影アプリ] Clarie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://luppet.appspot.com/&#34; target=&#34;_blank&#34;&gt;Luppet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;メタバース&#34;&gt;メタバース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cluster.mu/&#34; target=&#34;_blank&#34;&gt;cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://naby.booth.pm/items/990663&#34; target=&#34;_blank&#34;&gt;Vワールド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ゲームなど&#34;&gt;ゲームなど&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wandv.jp/seiya/&#34; target=&#34;_blank&#34;&gt;SEIYA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://orenodinner.booth.pm/items/952450&#34; target=&#34;_blank&#34;&gt;BONFIRE~焚き火~&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://store.steampowered.com/app/867090/VR__TSUNTSUN_VR/&#34; target=&#34;_blank&#34;&gt;つんつんVR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mediaplex.co.jp/korokoro/&#34; target=&#34;_blank&#34;&gt;コロコロシステム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ビューア&#34;&gt;ビューア&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.BooApps.VPocket&#34; target=&#34;_blank&#34;&gt;VPocket (Android / iOS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www43.atwiki.jp/beamman/&#34; target=&#34;_blank&#34;&gt;VRMビュアー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm-viewer.yukimochi.io/&#34; target=&#34;_blank&#34;&gt;VRM Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magicien/VRMQuickLook&#34; target=&#34;_blank&#34;&gt;VRMQuickLook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fantom1x.blog130.fc2.com/blog-entry-309.html&#34; target=&#34;_blank&#34;&gt;VRM Live Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kirurobo/UniWinApi&#34; target=&#34;_blank&#34;&gt;UniWinApi Example project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://120byte.booth.pm/items/1099618&#34; target=&#34;_blank&#34;&gt;VRMお人形遊び&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/m2wasabi/KinectV2VRM&#34; target=&#34;_blank&#34;&gt;KinectV2VRM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vrai.jp/vr_mocuvrm.html&#34; target=&#34;_blank&#34;&gt;MocuMocuVRM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;その他のvrm対応アプリ&#34;&gt;その他のVRM対応アプリ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://app.famitsu.com/gametitle/8356/&#34; target=&#34;_blank&#34;&gt;Vタビ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vismuth.net/&#34; target=&#34;_blank&#34;&gt;Vismuth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/t-takasaka/AI4Animation/tree/master/AI4Animation/Assets/Demo/ARKit&#34; target=&#34;_blank&#34;&gt;AI4Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34; target=&#34;_blank&#34;&gt;VRM4U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yashinut.com/archives/vstamp_app.html&#34; target=&#34;_blank&#34;&gt;Vスタンプ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/m2wasabi/VRMLoaderUI&#34; target=&#34;_blank&#34;&gt;VRMLoaderUI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
